---
- name: Add Kubernetes apt key ({{ kube_repo_channel | default('v1.30') }})
  become: true
  shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ kube_repo_channel | default('v1.30') }}/deb/Release.key \
      | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repo
  become: true
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    mode: "0644"
    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ kube_repo_channel | default('v1.30') }}/deb/ /"

- name: Install kubectl (pinned if set)
  become: true
  apt:
    name: "{{ 'kubectl=' + kubectl_pkg_version if (kubectl_pkg_version | default('')) | length > 0 else 'kubectl' }}"
    state: present
    update_cache: true

- name: Compute kube home dir
  become: false
  set_fact:
    kube_home: "{{ kubeconfig_dest_dir | default(lookup('env','HOME') + '/.kube') }}"

- name: Ensure ~/.kube exists for bastion user
  become_user: "{{ bastion_user }}"
  file:
    path: "/home/{{ bastion_user }}/.kube"
    state: directory
    mode: "0700"

- name: Write kubeconfig from cached fact
  become_user: "{{ bastion_user }}"
  copy:
    dest: "/home/{{ bastion_user }}/.kube/config"
    mode: "0600"
    content: "{{ kubeconfig_content }}"

- name: Export KUBECONFIG in ~/.bashrc
  become_user: "{{ bastion_user }}"
  lineinfile:
    path: "/home/{{ bastion_user }}/.bashrc"
    line: 'export KUBECONFIG="$HOME/.kube/config"'
    insertafter: EOF
    state: present
    create: yes
